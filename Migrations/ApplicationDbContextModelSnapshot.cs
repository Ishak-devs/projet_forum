// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forum.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Amis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EleveAmiId")
                        .HasColumnType("int");

                    b.Property<int>("EleveDemandeurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EleveAmiId");

                    b.HasIndex("EleveDemandeurId");

                    b.ToTable("Amis");
                });

            modelBuilder.Entity("Forum.Models.Admin", b =>
                {
                    b.Property<int>("Id_admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_admin"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id_admin");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Forum.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("Id_classe")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id_classe");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Forum.Models.Classe", b =>
                {
                    b.Property<int>("Id_classe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_classe"));

                    b.Property<string>("classe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_classe");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Forum.Models.Details_classe", b =>
                {
                    b.Property<int>("Id_details_classe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_details_classe"));

                    b.Property<int>("Id_classe")
                        .HasColumnType("int");

                    b.Property<int>("id_eleve")
                        .HasColumnType("int");

                    b.Property<int>("id_professeur")
                        .HasColumnType("int");

                    b.HasKey("Id_details_classe");

                    b.HasIndex("Id_classe");

                    b.HasIndex("id_eleve");

                    b.HasIndex("id_professeur");

                    b.ToTable("Details_classe");
                });

            modelBuilder.Entity("Forum.Models.Eleve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Eleves");
                });

            modelBuilder.Entity("Forum.Models.Professeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Professeurs");
                });

            modelBuilder.Entity("Amis", b =>
                {
                    b.HasOne("Forum.Models.Eleve", "EleveAmi")
                        .WithMany()
                        .HasForeignKey("EleveAmiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum.Models.Eleve", "EleveDemandeur")
                        .WithMany()
                        .HasForeignKey("EleveDemandeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EleveAmi");

                    b.Navigation("EleveDemandeur");
                });

            modelBuilder.Entity("Forum.Models.ChatMessage", b =>
                {
                    b.HasOne("Forum.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("Id_classe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("Forum.Models.Details_classe", b =>
                {
                    b.HasOne("Forum.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("Id_classe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum.Models.Eleve", "Eleve")
                        .WithMany()
                        .HasForeignKey("id_eleve")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum.Models.Professeur", "Professeur")
                        .WithMany()
                        .HasForeignKey("id_professeur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Eleve");

                    b.Navigation("Professeur");
                });
#pragma warning restore 612, 618
        }
    }
}
